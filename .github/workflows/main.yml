name: Build Maven Project

on:
  push:
    branches:
      - main 
jobs:
  build_and_upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build with Maven
        run: mvn clean install

      - name: Run Unit test case
        run: mvn test

      - name: Archive Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact  
          path: target/
      
      - name: Get GitHub API Data
        run: |
          API_URL="https://api.github.com/repos/muskanchaurasia23/sample/actions/artifacts"
          curl -sSL -o api_response.json $API_URL
      
      - name: Parse JSON Data
        run: |
            # Install jq if it's not available
            if ! command -v jq &> /dev/null; then
                sudo apt-get update
                sudo apt-get install -y jq
            fi

            # Parse the JSON data and store specific fields in environment variables
            owner_name=$(jq -r '.owner.id' api_response.json)
            repo_name=$(jq -r '.name' api_response.json)

            echo "Owner: $owner_name"
            echo "Repository: $repo_name"
            # artifact_id = $(jq -r '.artifacts[0].id' api_response.json)
            # echo "Arifact ID: $artifact_id"



      
      - name: Display Workflow Information
        run: |
          echo "Workflow Run ID: $GITHUB_RUN_ID"
          echo "Workflow Run Number: $GITHUB_RUN_NUMBER"
          echo "Workflow Name: $GITHUB_WORKFLOW"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Commit SHA: $GITHUB_SHA"
          echo "Triggering Event: $GITHUB_EVENT_NAME"
          echo "workspace directory : $GITHUB_WORKSPACE"
          echo "Artifact ID: $ARTIFACTS_ID"
          echo "Check suite ID: $GITHUB_CHECK_SUITES_ID"
      
      - name: Docker Login 
        uses: docker/login-action@v3
        with:
             username: ${{ secrets.DOCKER_USERNAME }}
             password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and Push Docker image
      #   run: |
      #        docker build -t "${DOCKER_USERNAME}/sample-project:latest" .
      #        docker push "${DOCKER_USERNAME}/sample-project:latest"   
      #   env:
      #        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
       
      # - name: Jfrog Artifactory
      #   uses: jfrog/setup-jfrog-cli@v3
      #   env:
      #     JF_URL: ${{ secrets.JF_URL }}
      #     JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
      
      # - name: Artifactory Ping
      #   env:
      #     ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
      #     ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
      #   run: |
      #     jf rt u "(*).(*)" sample-project --url="${ARTIFACTORY_URL}"
      